controller_manager:     # target node name
  ros__parameters:
    update_rate: 30 # Hz
    # use_sim_time: true

    diff_cont:
      type: diff_drive_controller/DiffDriveController

    joint_broad:
      type: joint_state_broadcaster/JointStateBroadcaster

diff_cont:
  ros__parameters:

    # See http://wiki.ros.org/diff_drive_controller  
    #     https://control.ros.org/jazzy/doc/ros2_controllers/diff_drive_controller/doc/userdoc.html

    publish_rate: 50.0

    # Name of frame to publish odometry in. Default: "/odom"
    # in Gazebo will become /diff_cont/odom
    odom_frame_id: '/odom'

    # Base frame_id, which is used to fill in the child_frame_id of the Odometry messages and TF. Default: base_link
    base_frame_id: base_link
    #base_frame_id: base_footprint

    # Publish to TF directly transformation between odom_frame_id and base_frame_id. Default: true
    # make itr false, or there will be a lot of jumping and wheels will be sepatared from the body.
    enable_odom_tf: false

    left_wheel_names: ["left_wheel_joint"]
    right_wheel_names: ["right_wheel_joint"]
    wheel_separation: 0.26
    wheel_radius: 0.0615

    # use_stamped_vel: false

    position_feedback: false
    open_loop: true

    wheels_per_side: 1
    wheel_separation_multiplier: 1.0
    left_wheel_radius_multiplier: 1.0
    right_wheel_radius_multiplier: 1.0

    pose_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]
    twist_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]

    # pose_covariance_diagonal : [0.001, 0.001, 0.001, 0.001, 0.001, 0.01]
    # twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.01]

    # open_loop: x

    cmd_vel_timeout: 1.0 # seconds

    # publish_limited_velocity: true
    # velocity_rolling_window_size: 10

    # Velocity and acceleration limits
    # Whenever a min_* is unspecified, default to -max_*

    # linear.x.has_velocity_limits: true
    # linear.x.has_acceleration_limits: true
    # linear.x.has_jerk_limits: false

    # linear.x.max_velocity: 0.320    # m/s - experimental on actual robot
    # linear.x.min_velocity: -0.320
    # linear.x.max_acceleration: 1.0
    # linear.x.min_acceleration: -1.0
    # linear.x.max_jerk: 0.0
    # linear.x.min_jerk: 0.0

    # angular.z.has_velocity_limits: true
    # angular.z.has_acceleration_limits: true
    # angular.z.has_jerk_limits: false

    # angular.z.max_velocity: 0.185    # rad/s - experimental on actual robot
    # angular.z.min_velocity: -0.185
    # angular.z.max_acceleration: 1.0
    # angular.z.min_acceleration: -1.0
    # angular.z.max_jerk: 0.0
    # angular.z.min_jerk: 0.0

#
# By default, published values for *_wheel_joint and *_caster_wheel_joint will appear
#    under /joint_states topic (position and velocity changing, effort 0)
#    there is no need to configure joint_state_broadcaster explicitly,
#    anything defined in rsp.launch.py will be published.
#
#joint_broad:
#  ros__parameters:
#    interfaces:
##      - effort
#      - position
##      - velocity
#    joints:
#      - left_wheel_joint
#      - right_wheel_joint
##    extra_joints:
##    map_interface_to_joint_state:
##      effort: effort
##      position: position
##      velocity: velocity
## "true" means the topic will be /joint_broad/joint_states, false - /joint_states:
#    use_local_topics: false

#joint_broad:
#  ros__parameters:
#    joints:
#      - left_wheel_joint
#      - right_wheel_joint
#    extra_joints:
#      - left_caster_wheel_joint
#      - right_caster_wheel_joint
